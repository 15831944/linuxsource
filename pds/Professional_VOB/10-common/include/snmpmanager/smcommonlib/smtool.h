#ifndef SM_TOOL_H_
#define SM_TOOL_H_
/*
#ifdef _WIN32
#include <string>
using namespace std;
#else
#include "string.h"
#endif
*/

#ifdef WIN32
#include "time.h"
#endif

#include "kdvtype.h"

class CSmTool
{
public:
    CSmTool() {}
    ~CSmTool() {}
	
    /*=============================================================================
    函 数 名:IsValidIpV4
    功    能:检验IP地址是否有效
    参    数:const s8* lptrIPStr              [in]    字符串指针型的地址
    注    意:无
    返 回 值:合法返回TRUE,非法返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2004/09/13  3.5     李洪强  加注释
    2005/08/31	4.0     刘瑞飞  根据王昊的算法修改
    =============================================================================*/
    static BOOL32 IsValidIpV4(const s8* lptrIPStr);

    /*=============================================================================
    函 数 名:IsValidIpV4
    功    能:检验IP地址是否有效
    参    数:u32 dwIP                       [in]    u32型的地址, 主机序
    注    意:无
    返 回 值:合法返回TRUE,非法返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2004/09/13  3.5     李洪强  加注释
    =============================================================================*/
    static BOOL32 IsValidIpV4(u32 dwIP);

    /*=============================================================================
    函 数 名:IsValidIpMask
    功    能:检验IP是否是合法的掩码
    参    数:const s8* lptrIpMask             [in]    const s8*型IP地址字符串
    注    意:无
    返 回 值:合法返回TRUE,非法返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     刘瑞飞  创建
    =============================================================================*/
    static BOOL32 IsValidIpMask(const s8* lptrIpMask);

    /*=============================================================================
    函 数 名:IsValidIpMask
    功    能:检验IP是否是合法的掩码
    参    数:u32 dwIpMask                   [in]    u32型IP地址, 主机序
    注    意:无
    返 回 值:合法返回TRUE,非法返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2005/08/31  4.0     刘瑞飞  创建
    =============================================================================*/
    static BOOL32 IsValidIpMask(u32 dwIpMask);

    /*=============================================================================
    函 数 名:GetIpStr
    功    能:得到IP地址的字串
    参    数:u32 dwIPAddr                   [in]    IP地址, 主机序
    注    意:无
    返 回 值:IP地址的字串
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2004/09/13  3.5     李洪强  加注释
    2005/10/26  4.0     王昊    取消使用inet_ntoa
    =============================================================================*/
    static s8* GetIpStr(u32 dwIPAddr, s8* pszIPAddr);

	static u32 GetNetIp(const s8* pszIPAddr);

	static u32 GetHostIp(const s8* pszIPAddr);

	static BOOL32 GetNormalTime(s8* pszNormalDate, s8* pszCompileDate);

	static u8 GetMonth(s8* pszMonth);

    /*=============================================================================
    函 数 名: IsValidCallIP
    功    能: 判断IP地址是否为合法呼叫IP
    参    数: u32 dwIP                          [in]    主机序IP地址
    注    意: 输入IP地址必须为IsValidIpV4判断出来的合法地址，
              在GetCallStrType之后使用
    返 回 值: BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2007/04/25  1.0     王昊    创建
    =============================================================================*/
    static BOOL32 IsValidCallIP(u32 dwIP);

    /*=============================================================================
    函 数 名: IsValidMulticastIP
    功    能: 判断IP地址是否为合法组播IP
    参    数: u32 dwIP                          [in]    主机序IP地址
    注    意: 输入IP地址必须为IsValidIpV4判断出来的合法地址
    返 回 值: BOOL
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    2007/04/25  1.0     王昊    创建
    =============================================================================*/
    static BOOL32 IsValidMulticastIP(u32 dwIP);


	static void SetBitStatus(u32& dwStatus, u32 dwMask, BOOL32 bFlag);
	static void SetBitStatus(u8& byStatus, u8 byMask, BOOL32 bFlag);

	static BOOL32 GetBitStatus(u32 dwStatus, u32 dwMask);

	/*=============================================================================
	函 数 名:MakeMtLedStatus
	功    能:构造终端指示灯状态字符串
	参    数:LPTSTR pszLed                  [out]   指示灯字符串
			 LPTSTR pszNodeLed              [in]    从SNMP节点中取出的指示灯状态
			 u8 bySubType                   [in]    设备子类型
	注    意:无
	返 回 值:无
	-------------------------------------------------------------------------------
	修改纪录:
	日      期  版本    修改人  修改内容
	=============================================================================*/
	static void MakeMtLedStatus(s8* pszLed, const s8* pszNodeLed, u8 bySubType);

	static u32 GetDeviceTypeName(u16 wDeviceType, s8* pszBuffer, u8 bySize);

	static u16 GetDeviceType(s8* pszTypeName);

    /*=============================================================================
    函 数 名:Hex2Asc
    功    能:把一个16进制的内存值转换为字符串, 如0x72a9->"72a9"
    参    数:const u8 *pbyHex                   [in]    待转换的HEX码
             s32 nHexlen                        [in]    待转换的HEX码长度, 按u8计算
             u8 *pbyAsc                         [out]   转换后的结果
    注    意:长度是原来的两倍，即把一个字节转为2个字节
    返 回 值:是否成功, 如果转换失败，返回FALSE, 如果有字符不在0~9,a~f之间，返回FLASE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    =============================================================================*/
    static BOOL32 Hex2Asc(const u8 *pbyHex, s32 nHexlen, u8 *pbyAsc);

    /*=============================================================================
    函 数 名:Asc2Hex
    功    能:把一个字符串以16进制形式转为内存，如把"98df13"->0x98df13
    参    数:const u8 *pbyAsc                   [in]    待转换的ASCII码
             s32 nAscLen                        [in]    待转换的ASCII码长度, 按u8计算
             u8 *pbyHex                         [out]   转换后的结果
    注    意:长度是原来的一半，字符串的长度必须是2的倍数
    返 回 值:是否成功, 如果字符串中有不在'0'~'9'，'a'~'f','A'~'F'之间的，则返回FALSE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    =============================================================================*/
    static BOOL32 Asc2Hex(const u8 *pbyAsc, s32 nAscLen, u8 *pbyHex);


	//请注意按照以下格式
	//%y-%m-%d %H:%M:%S 例如：2009-01-08 17:45:20
	//返回buffer的字符串
	static const s8* FormatDefaultTime(time_t time, s8 *pchTime);

	static time_t DefaultStringToTimet(s8 *pchTime);

	//Default %y-%m-%d %H:%M:%S 例如：2009-01-08 17:45:20
	static const s8* FormatTime(time_t time, s8 *pchTime, s8* pchFormat = NULL);

	//Default %y-%m-%d %H:%M:%S 例如：2009-01-08 17:45:20
	static time_t StringToTimet(s8 *pchTime, s8* pchFormat = NULL);

protected:
    /*=============================================================================
    函 数 名:Hex2Asc
    功    能:把一个16进制的数（0~9,a~f）转换为字符, 如0x0->'0',...,0x0f->'f'
    参    数:u8 byHex                           [in]    待转换的BIN
             u8 *pbyAsc                         [out]   结果
    注    意:无
    返 回 值:是否成功
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    =============================================================================*/
    static BOOL32 Hex2Asc(u8 byHex, u8 *pbyAsc);

    /*=============================================================================
    函 数 名:Asc2Hex
    功    能:把两个字符转为一个16进制的值, 把1~f压缩成一个字节，如7f->0x7f
    参    数:const u8 *pbyAsc                   [in]    待转换的ASCII
             u8 *pbyHex                         [out]   结果
    注    意:无
    返 回 值:是否成功, 如果转换失败，返回FALSE, 如果有字符不在0~9,a~f之间，返回FLASE
    -------------------------------------------------------------------------------
    修改纪录:
    日      期  版本    修改人  修改内容
    =============================================================================*/
    static BOOL32 Asc2Hex(const u8 *pbyAsc, u8 *pbyHex);

};


#endif