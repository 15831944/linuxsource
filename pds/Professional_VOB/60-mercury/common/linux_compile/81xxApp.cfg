/*  ============================================================================
 *   Copyright (c)  Texas Instruments Incorporated 2009
 *
 *   Use of this software is controlled by the terms and conditions found in the
 *   license agreement under which this software has been supplied or provided.
 *  ============================================================================
 */

/* use and configure the osal. */
var osalGlobal = xdc.useModule('ti.sdo.ce.osal.Global');
osalGlobal.runtimeEnv = osalGlobal.DSPLINK_LINUX;
xdc.useModule('ti.sdo.xdcruntime.linux.Settings');
xdc.useModule('ti.sdo.ce.osal.linux.Settings');
xdc.loadPackage('ti.syslink').profile = 'standard';


/* Enable SoCrates tracing in the demo FULL_TRACING DEFAULT_TRACING*/
//var TraceUtil = xdc.useModule('ti.sdo.ce.utils.trace.TraceUtil');
//TraceUtil.attrs = TraceUtil.DEFAULT_TRACING;
var common = xdc.loadCapsule('/opt/ti-ezsdk_dm816x-evm_5_00_00_11/codec-engine_3_21_00_10/examples/ti/sdo/ce/examples/buildutils/common_sys.cfg');
var Proc = xdc.useModule('ti.sdo.ce.ipc.dsplink.Processor');


// The following values should be created as part of Engine.createFromServer().
// For now, we need to match values in the platform's memory map.
Proc.sharedRegionId = common.SharedRegion_map["Ipc"];
Proc.heapId = common.MessageQ_heapMap["Ipc"];

// Use the Linux ipc
var ipcSettings = xdc.useModule('ti.sdo.ce.ipc.Settings');
var dsplinkIpc = xdc.useModule('ti.sdo.ce.ipc.dsplink.Ipc');
dsplinkIpc.usePowerManagement = false;
ipcSettings.ipc = dsplinkIpc;






/*
 *  ======== Engine Configuration ========
 */
var Engine = xdc.useModule('ti.sdo.ce.Engine');

var KdvNetraEngine = Engine.createFromServer(
    "ti816x",
    "./bin/ti_platforms_evmTI816X_DSP/ti816x.xe674",
    "servers.TI816X"
    );

// add local ARM codecs -- image_pro audio_copy decoder and encoder ... -- to KdvNetraEngine
var IMGPROC_CODEC = xdc.useModule('codecs.imgproc_codec.IMGPROC_CODEC');
IMGPROC_CODEC.alg.FLOAT=true;

/*
var AUDDEC_KDC = xdc.useModule('codecs.auddec_codec.AUDDEC_KDC');
AUDDEC_KDC.alg.FLOAT=true;


KdvNetraEngine.algs[ KdvNetraEngine.algs.length++ ] = {
	name: "imgproc",
	mod: IMGPROC_CODEC,
	local: true
};

KdvNetraEngine.algs[ KdvNetraEngine.algs.length++ ] = {
	name: "auddec",
	mod: AUDDEC_KDC,
	local: true
};
*/

// Set up logging
//xdc.loadCapsule('common_log.cfg');
xdc.loadCapsule('common_log.cfg');