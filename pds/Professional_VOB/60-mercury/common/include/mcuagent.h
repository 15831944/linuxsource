/*****************************************************************************
   模块名      : KDVMCU agent
   文件名      : mcuagent.h
   相关文件    : mcuagent.cpp
   文件实现功能: 前台代理基类定义，包含提供给VC的所有接口定义
   作者        : 李屹
   版本        : V0.9  Copyright(C) 2001-2002 KDC, All rights reserved.
-----------------------------------------------------------------------------
   修改记录:
   日  期      版本        修改人      修改内容
   2002/02/19  0.9         李屹        创建
   2002/07/29  1.0         李屹        新方案调整
   2003/11/10  3.0         jianghy     3.0实现
   2004/11/10  3.6         libo        新接口修改
   2004/11/29  3.6         libo        移植到Linux
******************************************************************************/
#ifndef MCUAGENT_H
#define MCUAGENT_H


#include "osp.h"
#include "kdvsys.h"
#include "mcuagtstruct.h"
#include "mculeaf.h"
#include "agtcomm.h"
#include "mcuconst.h"

extern "C" SEMHANDLE      g_semMcuAllConfig;
extern "C" SEMHANDLE      g_semMcuAlarmTable;

#define IS_DSL8000_BRD_MPC

 
class CMcuAgent  
{
public:

    /*====================================================================
    功能   ：设置ID
    参数   ：byId
    返回值 ：成功返回TRUE，反之FALSE
    ====================================================================*/
    BOOL SetId(u8 byId);

	/*====================================================================
	功能   ：获取ID
	参数   ：无
	返回值 ：ID值，0表示失败
	====================================================================*/
	u8   GetId() const;

    /*====================================================================
	功能：设置Alias
	参数：s8* pszAlias, Alias字符串指针
	返回值：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL SetAlias(s8* pszAlias);

	/*====================================================================
	功能：获取Alias
	参数：LPSTR lpszAlias, Alias字符串指针，内存需用户申请
          u16    wBufSize, Alias字符串缓冲区大小，若小于实际长度，返回字符串予以截断	
	返回值：成功返回TRUE，反之FALSE
	====================================================================*/
    BOOL GetAlias(s8* lpszAlias, u16 wBufSize) const;

    /*====================================================================
	功能：设置E164号码
	参数：s8* pszNumber, E164Number字符串指针
	返回值：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL SetE164Number(s8* pszNumber);

	/*====================================================================
	功能：获取E164号码
	参数：LPSTR lpszNumber, E164Number字符串指针，内存需用户申请
          u16    wBufSize, E164Number字符串缓冲区大小，若小于实际长度，返回字符串予以截断
	返回值：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL GetE164Number(s8* pszNumber, u16 wBufSize) const;

    /*====================================================================
	功能：设置与上级MCU级连时是否需要码率适配
	参数：无
	返回值：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL SetMmcuNeedBAS(u8 byNeedBas);

	/*====================================================================
	功能：获取与上级MCU级连时是否需要码率适配
	参数：无
	返回值：与上级MCU级连时是否需要码率适配,1-需要,2不需要。  0表示失败。
	====================================================================*/
	u8   GetMmcuNeedBAS() const;


	/*====================================================================
	功能：获取级连时缺省的终端列表
	参数：u32   * pdwIpList, 返回的IP列表（网络序）
          u8    bySize 用户申请的缓冲区大小，若不够截断
	返回值：实际的终端个数 
	====================================================================*/
    /*u8    GetTerminalIpList(u32   * pdwIpList, u8    bySize ) const;*/


	/*====================================================================
	功能：获取VC IP地址（网络序）
	参数：无
	返回值：IP地址，失败返回0
	====================================================================*/
	u32  GetVcIpAddr( ) const;


	/*====================================================================
	功能：获取GW IP地址（网络序）
	参数：无
	返回值：IP地址，失败返回0
	====================================================================*/
    /*u32  GetGwIpAddr( ) const;*/

    /*====================================================================
	功能：设置GK IP地址（网络序）
	参数：dwGkIpAddr
	返回值：TRUE成功，FALSE失败
	====================================================================*/
	BOOL SetGKIpAddr(u32 dwGkIpAddr);

	/*====================================================================
	功能：获取GK IP地址（网络序）
	参数：无
	返回值：IP地址，失败返回0
	====================================================================*/
	u32  GetGKIpAddr( ) const;


	/*====================================================================
	功能：获取组播交换信息
	参数：u32   * pdwIpAddr,  组播的IP地址（网络序）
          u16   * pwPort  组播端口号
	返回值：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL GetMulticastInfo(u32 * pdwIpAddr, u16 * pwPort) const;


	/*====================================================================
	功能：获取交换起始端口号
	参数：无
	返回值：端口号, 0表示失败
	====================================================================*/
	u16  GetRecvStartPort( ) const;

    /*====================================================================
    函数名      ：Set225245StartPort
    功能        ：设置225 245 Start Port
    输入参数说明：u16 wPort
    返回值说明  ：成功返回TRUE，反之FALSE
    ====================================================================*/
    BOOL Set225245StartPort(u16 wPort);
    /*====================================================================
	功能：获取225/245起始端口号
	参数：无
	返回值：端口号, 0表示失败
	====================================================================*/
	u16  Get225245StartPort( ) const;

    BOOL Set225245MtNum(u16 wMtNum);
    u16  Get225245MtNum() const;
	/*====================================================================
	功能：获取是否需要MPC转发码流
	参数：无
	返回值：是否需要MPC转发码流,1-需要,2不需要。  0表示失败。
	====================================================================*/
	u8   GetUseMPCTransData( ) const;

	/*====================================================================
	功能：获取是否需要MPC内置协议栈
	参数：无
	返回值：是否需要MPC内置协议栈,1-需要,2不需要。  0表示失败。
	====================================================================*/
	u8   GetUseMPCStack( ) const;

	/*====================================================================
	功能：通过单板槽位号得到其IP地址
	参数：u8    byBrdId: 单板槽位号
	返回值：IP地址(网络序), 0表示失败
	====================================================================*/
	u32  GetBrdIpAddr( u8 bySlotId ) const;


	/*====================================================================
	功能：通过外设ID得到其IP地址和类型
	参数：u8    byPeriId: 外设ID
	      u32   * pdwIpAddr: 对应该外设ID的IP地址(网络序)
		  u8   * pbyEqpType: 对应该外设ID的类型
	返回值：若存在返回TRUE，若不存在返回FALSE(此时pdwIpAddr和pbyEqpType无意义)
	====================================================================*/
	BOOL GetPeriInfo( u8 byPeriId, u32 * pdwIpAddr, u8 * pbyPeriType ) const;


	/*====================================================================
	功能：获取数字放象、录象机的交换信息
	参数：   u8     byRecId: 录象机的编号
	         u16   *  pwPort:    返回录象机的交换端口号
			 u8   * pbySlotId: 返回录象机的交换板号
	返回值：若存在返回TRUE，若不存在返回FALSE
	====================================================================*/
	BOOL GetRecSwitchAddr( u8 byRecId, u16 * pwPort, u8 * pbySlotId ) const;


	/*====================================================================
	功能：获取混音器的交换信息
	参数：   u8    byMixerId, Mixer的设备编号
             u16   * pwPort,    返回和Mixer的交换端口号
             u8   * pbySlotId 返回Mixer的交换板号
	返回值：若存在返回TRUE，若不存在返回FALSE
	====================================================================*/
	BOOL GetMixerSwitchAddr( u8 byMixerId, u16 * pwPort, u8 * pbySlotId ) const;


	/*====================================================================
	功能：获取码流适配器的交换信息
	参数：   u8    byBasId,   Bas的设备编号
             u16   * pwPort,    返回Bas的交换端口号
             u8   * pbySlotId 返回Bas的交换板号
	返回值：若存在返回TRUE，若不存在返回FALSE
	====================================================================*/
	BOOL GetBasSwitchAddr( u8 byBasId, u16 * pwPort, u8 * pbySlotId ) const;


	/*====================================================================
	功能：获取画面复合器的交换信息
	参数：   u8    byBasId,   画面复合器的设备编号
             u16   * pwPort,    返回画面复合器的交换端口号
             u8   * pbySlotId 返回画面复合器的交换板号
	返回值：若存在返回TRUE，若不存在返回FALSE
	====================================================================*/
	BOOL GetVMPSwitchAddr( u8 byVidMixId, u16 * pwPort, u8 * pbySlotId ) const;

	/*====================================================================
	功能：获取包重传器的交换信息
	参数：   u8    byPrsId,   包重传器的设备编号
             u16   * pwPort,    返回包重传器的交换端口号
             u8   * pbySlotId 返回包重传器的交换板号
	返回值：若存在返回TRUE，若不存在返回FALSE
	====================================================================*/
	BOOL GetPrsSwitchAddr( u8 byPrsId, u16 * pwPort, u8 * pbySlotId ) const;
	
	/*====================================================================
	功能：获取数字会议服务器的信息
	参数：u8   * pbyDcsId, 返回数字会议服务器的设备编号
	返回值：若存在返回TRUE，若不存在返回FALSE
	====================================================================*/
	BOOL GetDcsInfo( u8 * pbyDcsId ) const;
	

	/*====================================================================
	功能：获取外设类型
	参数：u8    byPeriId: 用户输入的PeriId
	返回值：成功：返回外设类型，失败：返回0
	====================================================================*/
	u8   GetPeriEqpType( u8 byPeriId ) const;


	/*====================================================================
	功能：获取网同步时钟源模式
	参数：无
	返回值：同步时钟源模式( 1:自由振荡 2: 跟踪 0表示失败 )
	====================================================================*/
	u8   GetSyncMode( ) const;

	/*====================================================================
	功能：获取网同步时钟源
	参数：u8   * byBrdId: 单板号
	      u8   * byE1Index: E1号
	返回值：成功返回TRUE，失败返回FALSE
	====================================================================*/
	BOOL GetSyncSource( u8 * byBrdId, u8 * byE1Index ) const;

	/*====================================================================
    功能        ：设置重启动的消息号和目的ID号
				  通知相应的实例
    输入参数说明： u16    wRebootEvent：重启动消息号
				   u32    dwNode, 目的节点，0表示不发，缺省为0
    返回值说明  ：无
    ====================================================================*/
	void SetRebootMsgDst( u16 wRebootEvent, u32 dwNode = 0 );

	/*====================================================================
    功能        ：设置从待机到运行的消息号和目的ID号
				  通知相应的实例
    输入参数说明：u16    wRunningEvent ：从待机到运行的消息号
				  u32    dwNode, 目的节点，0表示不发，缺省为0
    返回值说明  ：无
    ====================================================================*/
	void SetRunningMsgDst( u16 wRunningEvent, u32 dwNode = 0 );

	/*====================================================================
    功能        ：设置从运行到待机的消息号和目的ID号
				  通知相应的实例
    输入参数说明：u16    PowerOffEvent: 从运行到待机消息号
				  u32    dwNode, 目的节点，0表示不发，缺省为0
    返回值说明  ：无
    ====================================================================*/
	void SetPowerOffMsgDst( u16 wPowerOffEvent, u32 dwNode = 0 );

	/*====================================================================
    功能        ：初始化配置
    输入参数说明：u8 byMcuType: mcu 的类型
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
    BOOL InitConfig( u8 byMcuType );

	/*====================================================================
    功能        ：Agent 退出
    输入参数说明：
    返回值说明  ：
	====================================================================*/	
	void QuitMcuAgent( void );


	/*--------------------------------------------------------------------
	*以下接口单板管理程序使用
	*-------------------------------------------------------------------*/
	/*====================================================================
    功能        ：获取放、录象机的配置
    输入参数说明：u8    byId: 放、录象机的编号
	              STRUCT_mcueqpRecorderEntry* ptRecCfg:返回配置信息的结构
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL GetEqpRecorderCfg( u8 byId, STRUCT_mcueqpRecorderEntry * ptRecCfg );

	/*====================================================================
    功能        ：获取电视墙的配置
    输入参数说明：u8    byId: 电视墙的编号
	              STRUCT_mcueqpTVWallEntry* ptTWCfg:返回配置信息的结构
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL GetEqpTVWallCfg( u8 byId, STRUCT_mcueqpTVWallEntry * ptTWCfg );

	/*====================================================================
    功能        ：获取混音器的配置
    输入参数说明：u8    byId: 混音器的编号
	              STRUCT_mcueqpMixerEntry_mem* ptMixerCfg:返回配置信息的结构
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL GetEqpMixerCfg( u8 byId, STRUCT_mcueqpMixerEntry_mem * ptMixerCfg );

	/*====================================================================
    功能        ：获取码流适配器的配置(待定)
    输入参数说明：u8    byId: 码流适配器的编号
	              STRUCT_mcueqpBasEntry_mem* ptBasCfg:返回配置信息的结构
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL GetEqpBasCfg( u8 byId, STRUCT_mcueqpBasEntry_mem * ptBasCfg );

	/*====================================================================
    功能        ：获取画面复合器的配置(待定)
    输入参数说明：u8    byId: 画面复合器的编号
	              STRUCT_mcueqpVMPEntry_mem* ptVMPCfg:返回配置信息的结构
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL GetEqpVMPCfg( u8 byId, STRUCT_mcueqpVMPEntry_mem * ptVMPCfg );

	/*====================================================================
    功能        ：获取包转发器的配置(待定)
    输入参数说明：u8    byId: 包转发器的编号
	              STRUCT_mcueqpPrs_mem* ptPrsCfg:返回配置信息的结构
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL GetEqpPrsCfg( u8 byId, STRUCT_mcueqpPrs_mem * ptPrsCfg );

	/*====================================================================
    功能        ：获取数字会议服务器的配置
    输入参数说明：STRUCT_mcueqpDataConfServer* ptDcsCfg:返回数字会议服务器的配置
    返回值说明  ：配置信息的实际长度,0表示失败
	====================================================================*/
	BOOL GetEqpDcsCfg( STRUCT_mcueqpDataConfServer * ptDcsCfg );

	/*====================================================================
    功能        ：设置单板的版本信息
    输入参数说明：u8    byLayer:单板的层号
	              u8    bySlot:单板的槽号
				  u8    byType:单板的类型
				  s8* pchVersion:该单板的版本信息
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL SetBoardVersion( u8 byLayer, u8 bySlot, u8 byType, s8 * pchVersion );

	/*====================================================================
    功能        ：设置单板的灯状态
    输入参数说明：u8    byLayer:单板的层号
	              u8    bySlot:单板的槽号
				  u8    byType:单板的类型
				  u8    byCount:该单板的灯个数
				  s8* pchLedState:各个灯的状态
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL SetBoardLedState( u8 byLayer, u8 bySlot, u8 byType, u8 byCount, s8 * pchLedState );

	/*====================================================================
    功能        ：设置单板的模块信息
    输入参数说明：u8    byLayer:单板的层号
	              u8    bySlot:单板的槽号
				  u8    byType:单板的类型
				  s8* pchModule:该单板的模块
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL SetBoardModule( u8 byLayer, u8 bySlot, u8 byType, s8 * pchModule );

	/*====================================================================
    功能        ：判断是否配置了该单板
    输入参数说明：u8    byLayer:单板的层号
	              u8    bySlot:单板的槽号
				  u8    byType:单板的类型
    返回值说明  ：配置了返回TRUE，反之FALSE
	====================================================================*/
	BOOL ConfigedThisBoard( u8 byLayer, u8 bySlot, u8 byType );

	/*====================================================================
    功能        ：通过外设类型和IP地址获取其ID
    输入参数说明：u8    byPeriType:外设类型 
	              u32    dwIp:IP地址(网络序)
    返回值说明  ：外设ID, 0表示失败
	====================================================================*/
	u8   GetPeriId( u8 byPeriType, u32 dwIp );

	/*====================================================================
    功能        ：获取单板的外设号
    输入参数说明：u8    byLayer:单板的层号
	              u8    bySlot:单板的槽号
				  u8    byType:单板的类型
				  u8    *pbyIdBuf:存放ID的缓冲区
				  u8    byBufLen:缓冲区长度
    返回值说明  ：外设个数
	====================================================================*/
	u8   GetBoardPeriId( u8 byLayer, u8 bySlot, u8 byType, u8 * pbyIdBuf, u8 byBufLen );

	/*====================================================================
    功能        ：获取单板配置的IP地址(网络序)
    输入参数说明：u8    byLayer:单板的层号
	              u8    bySlot:单板的槽号
				  u8    byType:单板的类型
    返回值说明  ：外设IP地址, 0表示失败
	====================================================================*/
	u32  GetBoardIp( u8 byLayer, u8 bySlot, u8 byType );

	/*====================================================================
    功能        ：清除和某个单板相关的告警
    输入参数说明：u8    byLayer:单板的层号
	              u8    bySlot:单板的槽号
				  u8    byType:单板的类型
    返回值说明  ：成功返回TRUE，反之FALSE
	====================================================================*/
	BOOL DeleteBrdAlarm( u8 byLayer, u8 bySlot, u8 byType );

    u8  GetBrdChoice(u8 byLayer, u8 bySlot, u8 byType); // 取指定单板网口选择
    
    u8  GetCriDriNetChoice( u8 byBrdId );               // 取Cri、Dri板网段选择

    u8  GetCriDriIsCast( u8 byBrdId);                   // 取Cri、Dri板是否组播

	/*====================================================================
    构造、析构函数
	====================================================================*/	
	CMcuAgent();
    virtual ~CMcuAgent();

private:
	void SetDefaultConfig();
};



class IMcuAgent : public CInstance  
{
public:
	/*====================================================================
    功能        ：从告警列表中增加相应的告警信息
    输入参数说明：u32    dwAlarmCode, 告警码
                  u8    byObjType, 对象类型
                  u8    byObject[], 对象
                  STRUCT_mcupfmAlarmEntry *ptData, 返回的告警信息
    返回值说明  ：删除成功返回TRUE，反之返回FALSE
	====================================================================*/
    BOOL AddAlarm( u32 dwAlarmCode, u8 byObjType, u8 byObject[], STRUCT_mcupfmAlarmEntry * ptData );

	/*====================================================================
    功能        ：从告警列表中删除相应的告警信息
    输入参数说明：u32    dwSerialNo, 指定的告警索引
    返回值说明  ：删除成功返回TRUE，反之返回FALSE
	====================================================================*/
    BOOL DeleteAlarm( u32 dwSerialNo );
	
	/*====================================================================
    功能        ：从告警列表中获取相应的告警信息
    输入参数说明：u32    dwAlarmCode, 指定的告警码
                  u8    byObjType, 指定的告警对象类型
                  u8    byObject[], 指定的告警对象
                  STRUCT_mcupfmAlarmEntry *ptData, 返回的告警信息指针
    返回值说明  ：存在返回TRUE，反之返回FALSE
	====================================================================*/
    BOOL FindAlarm( u32    dwAlarmCode, u8    byObjType, u8    byObject[], 
               STRUCT_mcupfmAlarmEntry *ptData );

	/*====================================================================
    功能        ：实例消息处理入口函数，必须override
    输入参数说明：CMessage * const pcMsg, 传入的消息
    返回值说明  ：
	====================================================================*/
	virtual void InstanceEntry( CMessage * const pcMsg );
	
	IMcuAgent();
	virtual ~IMcuAgent();

protected:
	void ProcSDHStatusChange( CMessage * const pcMsg );
	void ProcBoardStatusChange( CMessage * const pcMsg );
	void ProcLinkStatusChange( CMessage * const pcMsg );
	void ProcNetSyncStatusChange( CMessage * const pcMsg );
	void ProcSoftwareStatusChange( CMessage * const pcMsg );
	void ProcPowerOnOffStatusChange( CMessage * const pcMsg );
	void ProcPowerStatusChange( CMessage * const pcMsg );
	void ProcModuleStatusChange( CMessage * const pcMsg );
	void ProcBoardQueryAlarm( CMessage * const pcMsg );
	void ProcPowerFanStatusChange( CMessage * const pcMsg );
	void ProcConfigError( CMessage * const pcMsg );
	void ProcBrdFanStatusChange( CMessage * const pcMsg );
	void ProcConfStatusChange( CMessage * const pcMsg );

    void ProcLedStatusChange( CMessage * const pcMsg );

};

typedef zTemplate<IMcuAgent, 1, CMcuAgent> CMcuAgentApp;

extern CMcuAgentApp g_cMcuAgent;

/*MCU AGENT 初始化 u8 byMcuType: mcu 的类型*/
API BOOL McuAgentInit( u8 byMcuType );

/*获取单板的槽位号*/
API u8    GetBoardSlot();

#endif /* End MCUAGENT_H */
