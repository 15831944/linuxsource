2013/08/18  修改客户端跟服务器界面显示，限制在不同情况下的按键启用，防止误操作带来的问题。
2013/08/22  根据21号小组评审意见，进行了大量修改。
    1、 在第一次请求连接时加TIMER，防止因网络异常没有应答时长时间等待。
    2、 客户端只公用一个结点。
    3、 if-else共存的时候只加一个打印即可。
    4、 服务器发送应答时不需要添加内容，只发送消息。非应答时消息只有NACK，原因可以当做内容发送。
    5、 文件名重名时可用access函数来做判断。
    6、 功能性函数需要判断调用是否成功。判断时可以设置BOOL变量替代直接判断非BOOL型的返回类型函数。
    7、 由主动设置服务器接收空间大小该为直接判断当前磁盘大小。
    8、 网络中断时，服务器主动判断接收文件是否完成，未完成的直接删除。
    9、 连接成功到上传文件、上传文件结束到下次上传文件之间都要由服务器设置TIMER。
    10、客户端上传文件结束不需要发送结束发送的信息。
    11、post内容只需要发送部分，未使用的内容去掉。
    12、状态发生改变，重置数据跟状态一致。



备注：
    1、根据zTemplate的定义template <class I, int maxins=1, class A=CAppNoData, u8 maxAliasLen=0>可看出，该模板实例可以直接调用类A的公共成员，因为它们是继承关系class zTemplate:public CApp, public A。可以将instance中公用的部分放在该类A中。
    
    2、基于平台的不同，会存在“大小端”问题，解决方案是将要post的数据中的超过单字节的数据改用主机序跟网络序的转化。每次在取值的时候将主机序转化为网络序(htonl)，赋值的时候将网络序改为主机序(ntohl)即可。这个过程放在声明结构体的时候实现。